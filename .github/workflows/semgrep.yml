# name: Semgrep
# on:
#   workflow_dispatch: {}
#   pull_request: {}
#   push:
#     branches:
#       - main
#       - master
#     paths:
#       - .github/workflows/semgrep.yml
#   schedule:
#     # random HH:MM to avoid a load spike on GitHub Actions at 00:00
#     - cron: '38 0 * * *'
# jobs:
#   semgrep:
#     name: semgrep/ci
#     runs-on: ubuntu-20.04
#     env:
#       SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
#     container:
#       image: returntocorp/semgrep
#     if: (github.actor != 'dependabot[bot]')
#     steps:
#       - uses: actions/checkout@v3
#       - run: semgrep ci

# Name of this GitHub Actions workflow.
name: Semgrep

on:
  # Scan changed files in PRs (diff-aware scanning):
  pull_request: {}
  # Scan on-demand through GitHub Actions interface:
  workflow_dispatch: {}
  # Scan mainline branches and report all findings: 
  push:
    branches: ["master", "main"]
  # Schedule the CI job (this method uses cron syntax):
  schedule:
    - cron: '20 17 * * *' # Sets Semgrep to scan every day at 17:20 UTC.
    # It is recommended to change the schedule to a random time.

jobs:
  semgrep:
    # User-definable name of this GitHub Actions job:
    name: semgrep/ci
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: returntocorp/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - uses: actions/checkout@v3
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep ci
        env:
           # Add the rules that Semgrep uses by setting the SEMGREP_RULES environment variable. 
           SEMGREP_RULES: p/default # more at semgrep.dev/explore
